<?xml version="1.0" encoding="UTF-8"?>
<sourceCode xmlns="http://org.ietr.preesm.sourceCode">
    <coreType>x86</coreType>
    <coreName>Core1</coreName>
    <SourceFile>
        <bufferContainer>
            <bufferAllocation name="r_explod_0" size="64" type="int"/>
            <bufferAllocation name="r_explod_1" size="64" type="int"/>
            <bufferAllocation name="r_explod_2" size="64" type="int"/>
            <bufferAllocation name="r_explod_3" size="64" type="int"/>
            <bufferAllocation name="r_explod_4" size="64" type="int"/>
            <bufferAllocation name="r_explod_5" size="1" type="int"/>
            <bufferAllocation name="r_explod_6" size="1" type="int"/>
            <bufferAllocation name="r_explod_7" size="1" type="int"/>
            <bufferAllocation name="r_explod_8" size="1" type="int"/>
            <bufferAllocation name="r_explod_9" size="1" type="int"/>
            <bufferAllocation name="IDCT2D_0_0" size="64" type="int"/>
            <bufferAllocation name="IDCT2D_2_0" size="64" type="int"/>
            <bufferAllocation name="IDCT2D_4_0" size="64" type="int"/>
            <bufferAllocation name="IDCT2D_5_0" size="64" type="int"/>
            <bufferAllocation name="IDCT2D_9_0" size="64" type="int"/>
            <bufferAllocation name="sem_0" size="30" type="semaphore"/>
        </bufferContainer>
        <threadDeclaration name="computationThread">
            <bufferContainer>
                <variableAllocation name="i" type="long"/>
                <variableAllocation name="j" type="long"/>
            </bufferContainer>
            <linearCodeContainer>
                <semaphoreInit>
                    <buffer name="sem_0" size="30" type="semaphore"/>
                    <constant name="semNumber" type="int" value="30"/>
                </semaphoreInit>
                <launchThread priority="1" stackSize="8000" threadName="communicationThread"/>
                <semaphorePost number="4" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="10" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="16" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="22" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="28" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
            </linearCodeContainer>
            <forLoop>
                <semaphorePend number="0" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="2" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="4" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <CompoundCode name="IDCT2D_0">
                    <bufferAllocation name="block_ou_0" size="64" type="int"/>
                    <CompoundCode name="IDCT2D_basic">
                        <bufferAllocation name="trig_clu_0" size="2" type="int"/>
                        <bufferAllocation name="outLoopP_0" size="64" type="int"/>
                        <userFunctionCall name="init_inLoopPort_0">
                            <buffer name="outLoopP_0" size="64" type="int"/>
                            <constant name="init_size" type="int" value="64"/>
                        </userFunctionCall>
                        <userFunctionCall name="trigger">
                            <buffer name="trig_clu_0" size="2" type="int"/>
                        </userFunctionCall>
                        <finiteForLoop domain="2" index="i">
                            <CompoundCode name="cluster_0">
                                <subBufferAllocation index="i"
                                    modulo="2" name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1" type="int"/>
                                <bufferAllocation name="out_1_li_0"
                                    size="64" type="int"/>
                                <bufferAllocation name="lineOut__0"
                                    size="64" type="int"/>
                                <bufferAllocation name="blockOut_0"
                                    size="64" type="int"/>
                                <userFunctionCall name="readBlock">
                                    <buffer name="r_explod_0" size="64" type="int"/>
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <subBuffer index="i"
                                    name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1"/>
                                    <buffer name="out_1_li_0" size="64" type="int"/>
                                </userFunctionCall>
                                <finiteForLoop domain="8" index="j">
                                    <CompoundCode name="IDCT1D">
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0"
                                    size="8" type="int"/>
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0"
                                    size="8" type="int"/>
                                    <userFunctionCall name="idct1d">
                                    <subBuffer index="j"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0" size="8"/>
                                    <subBuffer index="j"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0" size="8"/>
                                    </userFunctionCall>
                                    </CompoundCode>
                                </finiteForLoop>
                                <userFunctionCall name="transpose">
                                    <buffer name="lineOut__0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="block_ou_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                            </CompoundCode>
                        </finiteForLoop>
                    </CompoundCode>
                    <userFunctionCall name="clip">
                        <buffer name="block_ou_0" size="64" type="int"/>
                        <buffer name="r_explod_5" size="1" type="int"/>
                        <buffer name="IDCT2D_0_0" size="64" type="int"/>
                    </userFunctionCall>
                </CompoundCode>
                <semaphorePost number="5" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="3" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="1" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="6" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="8" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="10" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <CompoundCode name="IDCT2D_2">
                    <bufferAllocation name="block_ou_0" size="64" type="int"/>
                    <CompoundCode name="IDCT2D_basic">
                        <bufferAllocation name="trig_clu_0" size="2" type="int"/>
                        <bufferAllocation name="outLoopP_0" size="64" type="int"/>
                        <userFunctionCall name="init_inLoopPort_0">
                            <buffer name="outLoopP_0" size="64" type="int"/>
                            <constant name="init_size" type="int" value="64"/>
                        </userFunctionCall>
                        <userFunctionCall name="trigger">
                            <buffer name="trig_clu_0" size="2" type="int"/>
                        </userFunctionCall>
                        <finiteForLoop domain="2" index="i">
                            <CompoundCode name="cluster_0">
                                <subBufferAllocation index="i"
                                    modulo="2" name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1" type="int"/>
                                <bufferAllocation name="out_1_li_0"
                                    size="64" type="int"/>
                                <bufferAllocation name="lineOut__0"
                                    size="64" type="int"/>
                                <bufferAllocation name="blockOut_0"
                                    size="64" type="int"/>
                                <userFunctionCall name="readBlock">
                                    <buffer name="r_explod_1" size="64" type="int"/>
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <subBuffer index="i"
                                    name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1"/>
                                    <buffer name="out_1_li_0" size="64" type="int"/>
                                </userFunctionCall>
                                <finiteForLoop domain="8" index="j">
                                    <CompoundCode name="IDCT1D">
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0"
                                    size="8" type="int"/>
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0"
                                    size="8" type="int"/>
                                    <userFunctionCall name="idct1d">
                                    <subBuffer index="j"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0" size="8"/>
                                    <subBuffer index="j"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0" size="8"/>
                                    </userFunctionCall>
                                    </CompoundCode>
                                </finiteForLoop>
                                <userFunctionCall name="transpose">
                                    <buffer name="lineOut__0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="block_ou_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                            </CompoundCode>
                        </finiteForLoop>
                    </CompoundCode>
                    <userFunctionCall name="clip">
                        <buffer name="block_ou_0" size="64" type="int"/>
                        <buffer name="r_explod_6" size="1" type="int"/>
                        <buffer name="IDCT2D_2_0" size="64" type="int"/>
                    </userFunctionCall>
                </CompoundCode>
                <semaphorePost number="11" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="9" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="7" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="12" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="14" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="16" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <CompoundCode name="IDCT2D_4">
                    <bufferAllocation name="block_ou_0" size="64" type="int"/>
                    <CompoundCode name="IDCT2D_basic">
                        <bufferAllocation name="trig_clu_0" size="2" type="int"/>
                        <bufferAllocation name="outLoopP_0" size="64" type="int"/>
                        <userFunctionCall name="init_inLoopPort_0">
                            <buffer name="outLoopP_0" size="64" type="int"/>
                            <constant name="init_size" type="int" value="64"/>
                        </userFunctionCall>
                        <userFunctionCall name="trigger">
                            <buffer name="trig_clu_0" size="2" type="int"/>
                        </userFunctionCall>
                        <finiteForLoop domain="2" index="i">
                            <CompoundCode name="cluster_0">
                                <subBufferAllocation index="i"
                                    modulo="2" name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1" type="int"/>
                                <bufferAllocation name="out_1_li_0"
                                    size="64" type="int"/>
                                <bufferAllocation name="lineOut__0"
                                    size="64" type="int"/>
                                <bufferAllocation name="blockOut_0"
                                    size="64" type="int"/>
                                <userFunctionCall name="readBlock">
                                    <buffer name="r_explod_2" size="64" type="int"/>
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <subBuffer index="i"
                                    name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1"/>
                                    <buffer name="out_1_li_0" size="64" type="int"/>
                                </userFunctionCall>
                                <finiteForLoop domain="8" index="j">
                                    <CompoundCode name="IDCT1D">
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0"
                                    size="8" type="int"/>
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0"
                                    size="8" type="int"/>
                                    <userFunctionCall name="idct1d">
                                    <subBuffer index="j"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0" size="8"/>
                                    <subBuffer index="j"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0" size="8"/>
                                    </userFunctionCall>
                                    </CompoundCode>
                                </finiteForLoop>
                                <userFunctionCall name="transpose">
                                    <buffer name="lineOut__0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="block_ou_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                            </CompoundCode>
                        </finiteForLoop>
                    </CompoundCode>
                    <userFunctionCall name="clip">
                        <buffer name="block_ou_0" size="64" type="int"/>
                        <buffer name="r_explod_7" size="1" type="int"/>
                        <buffer name="IDCT2D_4_0" size="64" type="int"/>
                    </userFunctionCall>
                </CompoundCode>
                <semaphorePost number="17" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="15" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="13" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="18" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="20" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="22" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <CompoundCode name="IDCT2D_5">
                    <bufferAllocation name="block_ou_0" size="64" type="int"/>
                    <CompoundCode name="IDCT2D_basic">
                        <bufferAllocation name="trig_clu_0" size="2" type="int"/>
                        <bufferAllocation name="outLoopP_0" size="64" type="int"/>
                        <userFunctionCall name="init_inLoopPort_0">
                            <buffer name="outLoopP_0" size="64" type="int"/>
                            <constant name="init_size" type="int" value="64"/>
                        </userFunctionCall>
                        <userFunctionCall name="trigger">
                            <buffer name="trig_clu_0" size="2" type="int"/>
                        </userFunctionCall>
                        <finiteForLoop domain="2" index="i">
                            <CompoundCode name="cluster_0">
                                <subBufferAllocation index="i"
                                    modulo="2" name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1" type="int"/>
                                <bufferAllocation name="out_1_li_0"
                                    size="64" type="int"/>
                                <bufferAllocation name="lineOut__0"
                                    size="64" type="int"/>
                                <bufferAllocation name="blockOut_0"
                                    size="64" type="int"/>
                                <userFunctionCall name="readBlock">
                                    <buffer name="r_explod_3" size="64" type="int"/>
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <subBuffer index="i"
                                    name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1"/>
                                    <buffer name="out_1_li_0" size="64" type="int"/>
                                </userFunctionCall>
                                <finiteForLoop domain="8" index="j">
                                    <CompoundCode name="IDCT1D">
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0"
                                    size="8" type="int"/>
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0"
                                    size="8" type="int"/>
                                    <userFunctionCall name="idct1d">
                                    <subBuffer index="j"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0" size="8"/>
                                    <subBuffer index="j"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0" size="8"/>
                                    </userFunctionCall>
                                    </CompoundCode>
                                </finiteForLoop>
                                <userFunctionCall name="transpose">
                                    <buffer name="lineOut__0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="block_ou_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                            </CompoundCode>
                        </finiteForLoop>
                    </CompoundCode>
                    <userFunctionCall name="clip">
                        <buffer name="block_ou_0" size="64" type="int"/>
                        <buffer name="r_explod_8" size="1" type="int"/>
                        <buffer name="IDCT2D_5_0" size="64" type="int"/>
                    </userFunctionCall>
                </CompoundCode>
                <semaphorePost number="23" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="21" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="19" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="24" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="26" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <semaphorePend number="28" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <CompoundCode name="IDCT2D_9">
                    <bufferAllocation name="block_ou_0" size="64" type="int"/>
                    <CompoundCode name="IDCT2D_basic">
                        <bufferAllocation name="trig_clu_0" size="2" type="int"/>
                        <bufferAllocation name="outLoopP_0" size="64" type="int"/>
                        <userFunctionCall name="init_inLoopPort_0">
                            <buffer name="outLoopP_0" size="64" type="int"/>
                            <constant name="init_size" type="int" value="64"/>
                        </userFunctionCall>
                        <userFunctionCall name="trigger">
                            <buffer name="trig_clu_0" size="2" type="int"/>
                        </userFunctionCall>
                        <finiteForLoop domain="2" index="i">
                            <CompoundCode name="cluster_0">
                                <subBufferAllocation index="i"
                                    modulo="2" name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1" type="int"/>
                                <bufferAllocation name="out_1_li_0"
                                    size="64" type="int"/>
                                <bufferAllocation name="lineOut__0"
                                    size="64" type="int"/>
                                <bufferAllocation name="blockOut_0"
                                    size="64" type="int"/>
                                <userFunctionCall name="readBlock">
                                    <buffer name="r_explod_4" size="64" type="int"/>
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <subBuffer index="i"
                                    name="outSub_i_0"
                                    parentBuffer="trig_clu_0" size="1"/>
                                    <buffer name="out_1_li_0" size="64" type="int"/>
                                </userFunctionCall>
                                <finiteForLoop domain="8" index="j">
                                    <CompoundCode name="IDCT1D">
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0"
                                    size="8" type="int"/>
                                    <subBufferAllocation index="j"
                                    modulo="64"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0"
                                    size="8" type="int"/>
                                    <userFunctionCall name="idct1d">
                                    <subBuffer index="j"
                                    name="outSub_j_0"
                                    parentBuffer="out_1_li_0" size="8"/>
                                    <subBuffer index="j"
                                    name="inSub_j__0"
                                    parentBuffer="lineOut__0" size="8"/>
                                    </userFunctionCall>
                                    </CompoundCode>
                                </finiteForLoop>
                                <userFunctionCall name="transpose">
                                    <buffer name="lineOut__0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="block_ou_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                                <userFunctionCall name="memcpy">
                                    <buffer name="outLoopP_0" size="64" type="int"/>
                                    <buffer name="blockOut_0" size="64" type="int"/>
                                    <constant name="size" type="string" value="64*sizeof(int)"/>
                                </userFunctionCall>
                            </CompoundCode>
                        </finiteForLoop>
                    </CompoundCode>
                    <userFunctionCall name="clip">
                        <buffer name="block_ou_0" size="64" type="int"/>
                        <buffer name="r_explod_9" size="1" type="int"/>
                        <buffer name="IDCT2D_9_0" size="64" type="int"/>
                    </userFunctionCall>
                </CompoundCode>
                <semaphorePost number="29" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="27" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="25" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
            </forLoop>
            <linearCodeContainer/>
        </threadDeclaration>
        <threadDeclaration name="communicationThread">
            <bufferContainer/>
            <linearCodeContainer>
                <sendInit connectedCoreId="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                </sendInit>
                <receiveInit connectedCoreId="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                </receiveInit>
                <waitForCore>
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                </waitForCore>
                <waitForCore>
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                </waitForCore>
                <semaphorePost number="25" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="19" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="13" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="7" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="1" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="27" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="21" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="15" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="9" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePost number="3" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
            </linearCodeContainer>
            <forLoop>
                <semaphorePend number="25" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_4" size="64" type="int"/>
                </receiveMsg>
                <semaphorePost number="24" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="19" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_3" size="64" type="int"/>
                </receiveMsg>
                <semaphorePost number="18" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="13" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_2" size="64" type="int"/>
                </receiveMsg>
                <semaphorePost number="12" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="7" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_1" size="64" type="int"/>
                </receiveMsg>
                <semaphorePost number="6" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="1" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_0" size="64" type="int"/>
                </receiveMsg>
                <semaphorePost number="0" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="27" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_9" size="1" type="int"/>
                </receiveMsg>
                <semaphorePost number="26" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="21" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_8" size="1" type="int"/>
                </receiveMsg>
                <semaphorePost number="20" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="15" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_7" size="1" type="int"/>
                </receiveMsg>
                <semaphorePost number="14" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="9" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_6" size="1" type="int"/>
                </receiveMsg>
                <semaphorePost number="8" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="3" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <receiveMsg source="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core0"/>
                        <receiver def="x86" name="Core1"/>
                    </routeStep>
                    <buffer name="r_explod_5" size="1" type="int"/>
                </receiveMsg>
                <semaphorePost number="2" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="5" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <sendMsg target="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                    <buffer name="IDCT2D_0_0" size="64" type="int"/>
                </sendMsg>
                <semaphorePost number="4" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="11" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <sendMsg target="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                    <buffer name="IDCT2D_2_0" size="64" type="int"/>
                </sendMsg>
                <semaphorePost number="10" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="17" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <sendMsg target="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                    <buffer name="IDCT2D_4_0" size="64" type="int"/>
                </sendMsg>
                <semaphorePost number="16" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="23" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <sendMsg target="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                    <buffer name="IDCT2D_5_0" size="64" type="int"/>
                </sendMsg>
                <semaphorePost number="22" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
                <semaphorePend number="29" type="full">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePend>
                <sendMsg target="Core0">
                    <routeStep mediumDef="TCP" type="med">
                        <sender def="x86" name="Core1"/>
                        <receiver def="x86" name="Core0"/>
                    </routeStep>
                    <buffer name="IDCT2D_9_0" size="64" type="int"/>
                </sendMsg>
                <semaphorePost number="28" type="empty">
                    <buffer name="sem_0" size="30" type="semaphore"/>
                </semaphorePost>
            </forLoop>
            <linearCodeContainer/>
        </threadDeclaration>
    </SourceFile>
</sourceCode>
