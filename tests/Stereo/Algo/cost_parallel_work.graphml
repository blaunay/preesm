<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="model" attr.type="string" for="graph"/>
    <key attr.name="name" attr.type="string" for="node"/>
    <key attr.name="kind" attr.type="string" for="node"/>
    <key attr.name="port_direction" attr.type="string" for="node"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <key attr.name="nbRepeat" attr.type="int" for="node"/>
    <key attr.name="memory_script" attr.type="string" for="node"/>
    <key attr.name="edge_cons" attr.type="string" for="edge"/>
    <key attr.name="edge_delay" attr.type="string" for="edge"/>
    <key attr.name="edge_prod" attr.type="string" for="edge"/>
    <key attr.name="target_port_modifier" attr.type="string" for="edge"/>
    <key attr.name="source_port_modifier" attr.type="string" for="edge"/>
    <key attr.name="data_type" attr.type="string" for="edge"/>
    <graph edgedefault="directed">
        <data key="name">cost_parallel_work</data>
        <data key="kind">sdf</data>
        <data key="parameters">
            <parameter name="height"/>
            <parameter name="maxDisparity"/>
            <parameter name="minDisparity"/>
            <parameter name="truncValue"/>
            <parameter name="width"/>
            <parameter name="nbIterations"/>
            <parameter name="scale"/>
        </data>
        <data key="variables"/>
        <node id="CostConstruction">
            <data key="name">CostConstruction</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/costConstruction.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="truncValue" value="truncValue"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="grayL">
            <data key="name">grayL</data>
            <data key="kind">port</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
            <data key="port_direction">Input</data>
        </node>
        <node id="grayR">
            <data key="name">grayR</data>
            <data key="kind">port</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
            <data key="port_direction">Input</data>
        </node>
        <node id="cenL">
            <data key="name">cenL</data>
            <data key="kind">port</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
            <data key="port_direction">Input</data>
        </node>
        <node id="cenR">
            <data key="name">cenR</data>
            <data key="kind">port</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
            <data key="port_direction">Input</data>
        </node>
        <node id="rgbL">
            <data key="name">rgbL</data>
            <data key="kind">port</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
            <data key="port_direction">Input</data>
        </node>
        <node id="raw_disparity">
            <data key="name">raw_disparity</data>
            <data key="kind">port</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
            <data key="port_direction">Output</data>
        </node>
        <node id="disparityGen">
            <data key="name">disparityGen</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/disparityGen.idl</data>
            <data key="arguments">
                <argument name="maxDisparity" value="maxDisparity"/>
                <argument name="minDisparity" value="minDisparity"/>
            </data>
        </node>
        <node id="AggregateCost">
            <data key="name">AggregateCost</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/aggregateCost.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="nbIterations" value="nbIterations"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="offsetGen">
            <data key="name">offsetGen</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/offsetGen.idl</data>
            <data key="arguments">
                <argument name="nbIterations" value="nbIterations"/>
            </data>
        </node>
        <node id="broadcastOffsets">
            <data key="name">broadcastOffsets</data>
            <data key="kind">Broadcast</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <node id="computeHorWeights">
            <data key="name">computeHorWeights</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/computeWeights.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="horOrVert" value="0"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="broadcastHWeights">
            <data key="name">broadcastHWeights</data>
            <data key="kind">Broadcast</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <node id="computeVertWeights">
            <data key="name">computeVertWeights</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/computeWeights.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="horOrVert" value="1"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="broadcastVWeights">
            <data key="name">broadcastVWeights</data>
            <data key="kind">Broadcast</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <node id="disparitySelect">
            <data key="name">disparitySelect</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/disparitySelect.idl</data>
            <data key="memory_script">../Code/Scripts/disparitySelect.bsh</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="nbDisparities" value="maxDisparity-minDisparity"/>
                <argument name="scale" value="scale"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="broadcastResult">
            <data key="name">broadcastResult</data>
            <data key="kind">Broadcast</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <edge source="grayL" sourceport="" target="CostConstruction" targetport="grayL">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="grayR" sourceport="" target="CostConstruction" targetport="grayR">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="cenL" sourceport="" target="CostConstruction" targetport="cenL">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="CostConstruction" sourceport="disparityError"
            target="AggregateCost" targetport="disparityError">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="cenR" sourceport="" target="CostConstruction" targetport="cenR">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="disparityGen" sourceport="disparities"
            target="CostConstruction" targetport="disparity">
            <data key="edge_prod">maxDisparity-minDisparity</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="offsetGen" sourceport="offsets"
            target="broadcastOffsets" targetport="i">
            <data key="edge_prod">nbIterations</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">nbIterations</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="broadcastOffsets" sourceport="o"
            target="AggregateCost" targetport="offsets">
            <data key="edge_prod">nbIterations*(maxDisparity-minDisparity)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">nbIterations</data>
            <data key="data_type">int</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="offsetGen" sourceport="offsets"
            target="computeHorWeights" targetport="offset">
            <data key="edge_prod">nbIterations</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="rgbL" sourceport="" target="computeHorWeights" targetport="rgbL">
            <data key="edge_prod">height*width*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3</data>
            <data key="data_type">uchar</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="computeHorWeights" sourceport="weights"
            target="broadcastHWeights" targetport="i">
            <data key="edge_prod">height*width*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3*nbIterations</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="broadcastHWeights" sourceport="o"
            target="AggregateCost" targetport="hWeights">
            <data key="edge_prod">height*width*3*nbIterations*(maxDisparity-minDisparity)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3*nbIterations</data>
            <data key="data_type">float</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="offsetGen" sourceport="offsets"
            target="computeVertWeights" targetport="offset">
            <data key="edge_prod">nbIterations</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="rgbL" sourceport="" target="computeVertWeights" targetport="rgbL">
            <data key="edge_prod">height*width*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3</data>
            <data key="data_type">uchar</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="computeVertWeights" sourceport="weights"
            target="broadcastVWeights" targetport="i">
            <data key="edge_prod">height*width*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3*nbIterations</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="broadcastVWeights" sourceport="o"
            target="AggregateCost" targetport="vWeights">
            <data key="edge_prod">height*width*3*nbIterations*(maxDisparity-minDisparity)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3*nbIterations</data>
            <data key="data_type">float</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="AggregateCost" sourceport="aggregatedDisparity"
            target="disparitySelect" targetport="aggregatedDisparity">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="disparitySelect" sourceport="backBestCost"
            target="disparitySelect" targetport="bestCostFeed">
            <data key="edge_prod">height*width+1</data>
            <data key="edge_delay">height*width+1</data>
            <data key="edge_cons">height*width+1</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="disparityGen" sourceport="disparities"
            target="disparitySelect" targetport="disparity">
            <data key="edge_prod">maxDisparity-minDisparity</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="disparitySelect" sourceport="result"
            target="broadcastResult" targetport="i">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="broadcastResult" sourceport="o1"
            target="disparitySelect" targetport="currentResult">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">height*width</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
            <data key="target_port_modifier">pure_in</data>
        </edge>
        <edge source="broadcastResult" sourceport="o0"
            target="raw_disparity" targetport="">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
            <data key="source_port_modifier">pure_out</data>
        </edge>
    </graph>
</graphml>
