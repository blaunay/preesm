<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="arguments" for="node" id="arguments"/>
    <key attr.name="parameters" for="graph" id="parameters"/>
    <key attr.name="variables" for="graph" id="variables"/>
    <key attr.name="name" attr.type="string" for="graph"/>
    <key attr.name="model" attr.type="string" for="graph"/>
    <key attr.name="name" attr.type="string" for="node"/>
    <key attr.name="kind" attr.type="string" for="node"/>
    <key attr.name="port_direction" attr.type="string" for="node"/>
    <key attr.name="graph_desc" attr.type="string" for="node"/>
    <key attr.name="nbRepeat" attr.type="int" for="node"/>
    <key attr.name="edge_cons" attr.type="string" for="edge"/>
    <key attr.name="edge_delay" attr.type="string" for="edge"/>
    <key attr.name="edge_prod" attr.type="string" for="edge"/>
    <key attr.name="data_type" attr.type="string" for="edge"/>
    <graph edgedefault="directed">
        <data key="name">stereo_top</data>
        <data key="kind">sdf</data>
        <data key="parameters"/>
        <data key="variables">
            <variable name="height" value="375"/>
            <variable name="maxDisparity" value="60"/>
            <variable name="minDisparity" value="0"/>
            <variable name="nbIterations" value="5"/>
            <variable name="truncValue" value="12"/>
            <variable name="width" value="450"/>
        </data>
        <node id="Read_PPM0">
            <data key="name">Read_PPM0</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/readPPM.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="id" value="0"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="Display_rgb0">
            <data key="name">Display_rgb0</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/displayRGB.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="index" value="0"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="Read_PPM1">
            <data key="name">Read_PPM1</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/readPPM.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="id" value="1"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="Display_rgb1">
            <data key="name">Display_rgb1</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/displayRGB.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="index" value="1"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="RGB2Gray_L">
            <data key="name">RGB2Gray_L</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/RGB2Gray.idl</data>
            <data key="arguments">
                <argument name="size" value="height*width"/>
            </data>
        </node>
        <node id="lum2rgb">
            <data key="name">lum2rgb</data>
            <data key="kind">Broadcast</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <node id="RGB2Gray_R">
            <data key="name">RGB2Gray_R</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/RGB2Gray.idl</data>
            <data key="arguments">
                <argument name="size" value="height*width"/>
            </data>
        </node>
        <node id="Census_L">
            <data key="name">Census_L</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/census.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="Census_R">
            <data key="name">Census_R</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/census.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="r_g_b_2_rgb">
            <data key="name">r_g_b_2_rgb</data>
            <data key="kind">join</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <node id="Cost_Parallel_Work">
            <data key="name">Cost_Parallel_Work</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">cost_parallel_work.graphml</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="maxDisparity" value="maxDisparity"/>
                <argument name="minDisparity" value="minDisparity"/>
                <argument name="nbIterations" value="nbIterations"/>
                <argument name="truncValue" value="truncValue"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <node id="lum2rgb2">
            <data key="name">lum2rgb2</data>
            <data key="kind">Broadcast</data>
            <data key="graph_desc"/>
            <data key="arguments"/>
        </node>
        <node id="medianFilter">
            <data key="name">medianFilter</data>
            <data key="kind">vertex</data>
            <data key="graph_desc">../Code/IDL/medianFilter.idl</data>
            <data key="arguments">
                <argument name="height" value="height"/>
                <argument name="width" value="width"/>
            </data>
        </node>
        <edge source="Read_PPM0" sourceport="g" target="RGB2Gray_L" targetport="g">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Read_PPM0" sourceport="b" target="RGB2Gray_L" targetport="b">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="lum2rgb" sourceport="r" target="Display_rgb0" targetport="r">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="lum2rgb" sourceport="g" target="Display_rgb0" targetport="g">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="lum2rgb" sourceport="b" target="Display_rgb0" targetport="b">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Read_PPM1" sourceport="g" target="RGB2Gray_R" targetport="g">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Read_PPM1" sourceport="b" target="RGB2Gray_R" targetport="b">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Read_PPM0" sourceport="r" target="RGB2Gray_L" targetport="r">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="Read_PPM1" sourceport="r" target="RGB2Gray_R" targetport="r">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Census_L" sourceport="cen" target="lum2rgb" targetport="gray">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="RGB2Gray_L" sourceport="gray" target="Census_L" targetport="gray">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="RGB2Gray_R" sourceport="gray" target="Census_R" targetport="gray">
            <data key="edge_prod">width*height</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">width*height</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="Read_PPM0" sourceport="r" target="r_g_b_2_rgb" targetport="r">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Read_PPM0" sourceport="g" target="r_g_b_2_rgb" targetport="g">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Read_PPM0" sourceport="b" target="r_g_b_2_rgb" targetport="b">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="RGB2Gray_L" sourceport="gray"
            target="Cost_Parallel_Work" targetport="grayL">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="RGB2Gray_R" sourceport="gray"
            target="Cost_Parallel_Work" targetport="grayR">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">float</data>
        </edge>
        <edge source="Census_L" sourceport="cen"
            target="Cost_Parallel_Work" targetport="cenL">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Census_R" sourceport="cen"
            target="Cost_Parallel_Work" targetport="cenR">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="r_g_b_2_rgb" sourceport="rgb"
            target="Cost_Parallel_Work" targetport="rgbL">
            <data key="edge_prod">height*width*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="lum2rgb2" sourceport="o" target="Display_rgb1" targetport="r">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="lum2rgb2" sourceport="o" target="Display_rgb1" targetport="g">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="lum2rgb2" sourceport="o" target="Display_rgb1" targetport="b">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="Cost_Parallel_Work" sourceport="raw_disparity"
            target="medianFilter" targetport="rawDisparity">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="medianFilter" sourceport="filteredDisparity"
            target="lum2rgb2" targetport="i">
            <data key="edge_prod">height*width</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">height*width</data>
            <data key="data_type">uchar</data>
        </edge>
    </graph>
</graphml>
