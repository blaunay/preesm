/**
 * 
 */
package org.ietr.preesm.core.codegen;

import org.ietr.preesm.core.codegen.sdfProperties.BufferAggregate;

/**
 * Buffer abstraction
 * 
 * @author mpelcat
 */
public class Buffer {

	// Buffer representing an edge: characteristic names
	
	/**
	 * The current vertex was generated by this aggregate
	 */
	private BufferAggregate aggregate;

	/**
	 * destination name of the corresponding edge
	 */
	private String destID;

	/**
	 * destination port name of the corresponding edge
	 */
	private String destInputPortID;

	// Buffer generated from a name
	/**
	 * Buffer name if not generated from edge characteristics
	 */
	private String name;

	/**
	 * Size of the allocated buffer
	 */
	private Integer size;
	
	/**
	 * source name of the corresponding edge
	 */
	private String sourceID;

	/**
	 * source port name of the corresponding edge
	 */
	private String sourceOutputPortID;

	/**
	 * Type of the allocated buffer
	 */
	private DataType type;

	public Buffer(String name, Integer size, DataType type,
			BufferAggregate aggregate) {

		this.sourceID = null;
		this.destID = null;
		this.sourceOutputPortID = null;
		this.destInputPortID = null;

		this.size = size;
		this.type = type;

		this.aggregate = aggregate;
		
		this.name = name;
	}
	
	public Buffer(String sourceID, String destID, String sourceOutputPortID,
			String destInputPortID, Integer size, DataType type,
			BufferAggregate aggregate) {

		this.sourceID = sourceID;
		this.destID = destID;
		this.sourceOutputPortID = sourceOutputPortID;
		this.destInputPortID = destInputPortID;

		this.size = size;
		this.type = type;

		this.aggregate = aggregate;
		
		this.name = null;
	}

	public void accept(AbstractPrinter printer) {

		printer.visit(this,0); // Visit self
	}

	public BufferAggregate getAggregate() {
		return aggregate;
	}

	public String getName() {

		if(name == null)
			return sourceID + sourceOutputPortID + destID + destInputPortID;
		else
			return name;
	}

	public Integer getSize() {
		return size;
	}

	public DataType getType() {
		return type;
	}
	
	@Override
	public String toString() {

		return getName();
	}

}
