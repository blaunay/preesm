<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="graph_desc" attr.type="string" for="node" id="graph_desc"/>
    <key attr.name="name" attr.type="string" for="graph" id="name"/>
    <key attr.name="name" attr.type="string" for="node" id="name"/>
    <key attr.name="arguments" attr.type="string" for="node" id="arguments"/>
    <key attr.name="parameters" attr.type="string" for="graph" id="parameters"/>
    <key attr.name="variables" attr.type="string" for="graph" id="variables"/>
    <key attr.name="edge_prod" attr.type="string" for="edge" id="edge_prod">
        <desc>org.sdf4j.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="edge_delay" attr.type="string" for="edge" id="edge_delay">
        <desc>org.sdf4j.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="edge_cons" attr.type="string" for="edge" id="edge_cons">
        <desc>org.sdf4j.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="data_type" attr.type="string" for="edge" id="data_type">
        <desc>org.sdf4j.model.sdf.types.SDFTextualEdgePropertyTypeFactory</desc>
    </key>
    <graph edgedefault="directed">
        <data key="name"/>
        <data key="parameters">
            <parameter name="xsize"/>
            <parameter name="ysize"/>
            <parameter name="nb_slices"/>
        </data>
        <data key="variables"/>
        <node id="substract_pic" kind="vertex">
            <data key="graph_desc">../Code/IDL/substractPic.idl</data>
            <data key="name">substract_pic</data>
            <data key="arguments">
                <argument name="xsize" value="xsize"/>
                <argument name="ysize" value="ysize/nb_slices"/>
            </data>
        </node>
        <node id="U1" kind="port" port_direction="Input"/>
        <node id="U2" kind="port" port_direction="Input"/>
        <node id="V1" kind="port" port_direction="Input"/>
        <node id="V2" kind="port" port_direction="Input"/>
        <node id="Y1" kind="port" port_direction="Input"/>
        <node id="Y2" kind="port" port_direction="Input"/>
        <node id="Y1o" kind="port" port_direction="Output"/>
        <node id="U1o" kind="port" port_direction="Output"/>
        <node id="V1o" kind="port" port_direction="Output"/>
        <node id="V" kind="port" port_direction="Output"/>
        <node id="Y" kind="port" port_direction="Output"/>
        <node id="U" kind="port" port_direction="Output"/>
        <edge source="U1" sourceport="" target="substract_pic" targetport="U1">
            <data key="edge_prod">(xsize/2*ysize/2)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)/nb_slices</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="U2" sourceport="" target="substract_pic" targetport="U2">
            <data key="edge_prod">(xsize/2*ysize/2)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)/nb_slices</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="V1" sourceport="" target="substract_pic" targetport="V1">
            <data key="edge_prod">(xsize/2*ysize/2)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)/nb_slices</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="V2" sourceport="" target="substract_pic" targetport="V2">
            <data key="edge_prod">(xsize/2*ysize/2)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)/nb_slices</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="Y1" sourceport="" target="substract_pic" targetport="Y1">
            <data key="edge_prod">(xsize*ysize)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize*ysize)/nb_slices</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="Y2" sourceport="" target="substract_pic" targetport="Y2">
            <data key="edge_prod">(xsize*ysize)</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize*ysize)/nb_slices</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="substract_pic" sourceport="U" target="U" targetport="">
            <data key="edge_prod">(xsize/2*ysize/2)/nb_slices</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="substract_pic" sourceport="U1o" target="U1o" targetport="">
            <data key="edge_prod">(xsize/2*ysize/2)/nb_slices</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="substract_pic" sourceport="V" target="V" targetport="">
            <data key="edge_prod">(xsize/2*ysize/2)/nb_slices</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="substract_pic" sourceport="V1o" target="V1o" targetport="">
            <data key="edge_prod">(xsize/2*ysize/2)/nb_slices</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize/2*ysize/2)</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="substract_pic" sourceport="Y" target="Y" targetport="">
            <data key="edge_prod">(xsize*ysize)/nb_slices</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize*ysize)</data>
            <data key="data_type">char</data>
        </edge>
        <edge source="substract_pic" sourceport="Y1o" target="Y1o" targetport="">
            <data key="edge_prod">(xsize*ysize)/nb_slices</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xsize*ysize)</data>
            <data key="data_type">char</data>
        </edge>
    </graph>
</graphml>
